#!/usr/bin/env python
import json
import sys
import main
from datetime import datetime
import base64
CONFIG = {}


if __name__ == '__main__':

    CONFIG = json.loads(sys.argv[1])
    ep = CONFIG["MYSQL_EP"]
    if ep is not None:
        enc = base64.b64decode(ep)
        if enc is not None:
            CONFIG["MYSQL_EP"] = enc.decode("utf-8")
    else:
        CONFIG["MYSQL_FILE"] = "dataset/unlocode_list_with_gps.csv"

    print(json.dumps({"status":"ok"}))

    main.CONFIG = CONFIG

    if "unlocode" not in CONFIG:
        print(json.dumps({"error": "no unlocode was provided"}))
        exit(0)

    unlocode = CONFIG["unlocode"].upper()


    timestamp = datetime.now()
    if "timestamp" in CONFIG:
        timestamp = CONFIG["timestamp"]

    row_from_db = main.get_row(unlocode)

    if isinstance(row_from_db, str):
        print(json.dumps({"error": row_from_db}))
        exit(0)

    if row_from_db is None:
        print(json.dumps({"error": "unlocode %s cannot be found" %(CONFIG["unlocode"])}))
        exit(0)

    timezoneturtle = main.get_timezone(row_from_db)

    returnvalue = row_from_db.__dict__

    returnvalue["timezone"] = timezoneturtle
    returnvalue["current_time"] = main.get_local_time(returnvalue, timestamp)

    del returnvalue["_sa_instance_state"]
    print(json.dumps(returnvalue))